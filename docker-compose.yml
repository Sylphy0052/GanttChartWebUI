version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gantt-postgres
    environment:
      POSTGRES_DB: gantt_chart
      POSTGRES_USER: gantt_user
      POSTGRES_PASSWORD: gantt_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d/migrations
    ports:
      - "5432:5432"
    networks:
      - gantt-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gantt_user -d gantt_chart"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service (NestJS)
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: production
    container_name: gantt-api
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://gantt_user:gantt_password@postgres:5432/gantt_chart
      JWT_SECRET: your-jwt-secret-key-change-this-in-production
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gantt-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Web Service (Next.js)
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      target: production
    container_name: gantt-web
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - gantt-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  gantt-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local